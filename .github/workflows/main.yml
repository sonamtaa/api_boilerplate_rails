# build & test & quality

name: build & test & quality

# Triggers the workflow on push or pull request events
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  rspec:
    name: Run Rspec Test
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    services:
      postgres:
        image: postgres:14-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_api_boilerplate_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
    steps:
      - name: Install required Packages
        run: sudo apt-get -y install libpq-dev libvips

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run Code Analysis
        run: |
          bundle exec brakeman
          bundle exec rubycritic

      - name: Run Test
        env:
          RAILS_ENV: test
          REDIS_URL: redis://localhost:6379/1
          DATABASE_URL: postgres://postgres:password@localhost:5432/rails_api_boilerplate_test
        run: |
          RAILS_ENV=test bundle exec rake db:migrate:reset
          bundle exec rspec

  rubocop:
    strategy:
      matrix:
        os: [ubuntu-latest]
        ruby-version: [3.2.4]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: false

      - name: Install ruby dependencies
        run: bundle install

      - name: Run Code Analysis
        run: |
          bundle exec brakeman
          bundle exec rubycritic
          bundle exec rails_best_practices

      - name: Rubocop
        run: bundle exec rubocop --config .rubocop.yml --parallel

  zeitwerk:
    env:
      RAILS_ENV: test

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        ruby-version: [3.2.4]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: false

      - name: Install ruby dependencies
        run: bundle install

      - name: Zeitwerk Check
        run: bundle exec rails zeitwerk:check
